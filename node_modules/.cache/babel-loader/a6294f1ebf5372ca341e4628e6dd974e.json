{"remainingRequest":"/home/ash/opol7/node_modules/thread-loader/dist/cjs.js!/home/ash/opol7/node_modules/babel-loader/lib/index.js!/home/ash/opol7/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ash/opol7/src/modules/equipment/hardware/Hardware.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ash/opol7/src/modules/equipment/hardware/Hardware.vue","mtime":1529602040592},{"path":"/home/ash/opol7/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/ash/opol7/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/home/ash/opol7/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/home/ash/opol7/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/ash/opol7/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      deleteHardwareDialog: false,\n      pagination: {\n        rowsPerPage: 5,\n        page: 1\n      },\n      headers: [// {\n      //   visible: false,\n      //   // text: 'id',\n      //   value: 'id',\n      //   sortable: false,\n      // },\n      {\n        text: 'Asset',\n        value: 'asset_tag',\n        align: 'left'\n      }, {\n        text: 'Category',\n        align: 'right',\n        value: 'category'\n      }, {\n        text: 'Model',\n        align: 'right',\n        value: 'model'\n      }, {\n        text: 'Status',\n        align: 'right',\n        value: 'status_label'\n      }, {\n        text: 'Location',\n        align: 'right',\n        value: 'location'\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    hardwares: 'hardware/hardwares',\n    totalNumberOfHardwares: 'hardware/totalNumberOfHardwares',\n    loading: 'hardware/loading',\n    selectedHardware: 'hardware/selectedHardware',\n    user: 'common/user'\n  })),\n  watch: {\n    pagination: {\n      handler: function handler(after, before) {\n        this.updatePagination(after);\n        var navigation = after.page - before.page;\n        if (after.rowsPerPage !== before.rowsPerPage) navigation = 0;\n\n        switch (navigation) {\n          case 0:\n            this.find();\n            break;\n\n          case 1:\n            this.findNext();\n            break;\n\n          case -1:\n            this.findPrevious();\n            break;\n        }\n      },\n      deep: true\n    }\n  },\n  methods: _objectSpread({}, mapActions({\n    find: 'hardware/find',\n    findNext: 'hardware/findNext',\n    findPrevious: 'hardware/findPrevious',\n    selectHardware: 'hardware/selectHardware',\n    delete: 'hardware/delete',\n    update: 'hardware/update',\n    showMessage: 'common/showMessage'\n  }), mapMutations({\n    updatePagination: 'hardware/UPDATE_PAGINATION_DATA'\n  }), {\n    confirmDeleteHardware: function confirmDeleteHardware(hardwareId) {\n      this.selectHardware(hardwareId);\n      this.deleteHardwareDialog = true;\n    },\n    checkHardware: function checkHardware(hardware, type) {\n      var _this = this;\n\n      switch (type) {\n        case 0:\n          {\n            /* eslint-disable-next-line */\n            hardware.assigned_to = {\n              uid: this.user.uid,\n              name: this.user.displayName\n              /* eslint-disable-next-line */\n\n            };\n            hardware.status_label = {\n              id: 2,\n              name: 'Out',\n              status_meta: 'checkedOut'\n            };\n            break;\n          }\n\n        case 1:\n          {\n            /* eslint-disable-next-line */\n            hardware.assigned_to = {\n              id: '',\n              name: ''\n              /* eslint-disable-next-line */\n\n            };\n            hardware.status_label = {\n              id: 1,\n              name: 'Ready to Deploy',\n              status_meta: 'deployable'\n            };\n            break;\n          }\n\n        default:\n          {\n            //statements;\n            break;\n          }\n      }\n\n      this.update(hardware).then(function () {\n        _this.showMessage({\n          text: 'Hardware has been checkedout',\n          icon: 'info_outline',\n          color: 'green'\n        });\n      });\n      this.pagination.page = 1;\n      this.find(); // this.deleteHardwareDialog = false\n      // this.delete(this.selectedHardware).then(() => {\n      //   this.showMessage({\n      //     text: 'Hardware has been deleted',\n      //     icon: 'info_outline',\n      //     color: 'green',\n      //   })\n      //   this.pagination.page = 1\n      //   this.find()\n      // })\n    },\n    deleteHardware: function deleteHardware() {\n      var _this2 = this;\n\n      this.deleteHardwareDialog = false;\n      this.delete(this.selectedHardware).then(function () {\n        _this2.showMessage({\n          text: 'Hardware has been deleted',\n          icon: 'info_outline',\n          color: 'green'\n        });\n\n        _this2.pagination.page = 1;\n\n        _this2.find();\n      });\n    },\n    cancelDeleteHardware: function cancelDeleteHardware() {\n      this.deleteHardwareDialog = false;\n    }\n  })\n};",{"version":3,"sources":["Hardware.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n\n    <h4>List Hardwares</h4>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"hardwares\"\n      :pagination.sync=\"pagination\"\n      :total-items=\"totalNumberOfHardwares\"\n      :loading=\"loading\"\n      class=\"elevation-1\"\n    >\n      <template slot=\"items\" slot-scope=\"props\">\n        <!-- <td>\n          <v-checkbox v-model=\"props.selected\" primary hide-details></v-checkbox>\n        </td> -->\n\n        <td>{{ props.item.asset_tag }}</td>\n        <td class=\"text-xs-right\">{{ props.item.category.name }}</td>\n        <td class=\"text-xs-right\">{{ props.item.model.name }}</td>\n        <td class=\"text-xs-right\">{{ props.item.status_label.name }}</td>\n        <td class=\"text-xs-right\">{{ props.item.location.name }}</td>\n        <td v-if=\"props.item.assigned_to\" class=\"text-xs-right\">{{ props.item.assigned_to.name }}</td>\n        <td v-else class=\"text-xs-right\"> </td>\n\n        <!-- <td class=\"text-xs-right\">{{ props.item.location.name }}</td> -->\n        <td class=\"justify-center layout px-0\">\n          <v-btn v-if=\"props.item.status_label.status_meta == 'deployable'\" color=\"primary\" small @click=\"checkHardware(props.item, 0)\">\n            CheckOut\n          </v-btn>\n          <v-btn v-if=\"props.item.status_label.status_meta != 'deployable'\" color=\"secondary\" small @click=\"checkHardware(props.item, 1)\">\n            CheckIn\n          </v-btn>\n          <v-btn :to=\"`hardware/${props.item.id}/edit`\" flat icon color=\"light-blue darken-1\">\n            <v-icon>mode_edit</v-icon>\n          </v-btn>\n\n          <v-btn flat icon color=\"red darken-1\" @click.native.stop=\"confirmDeleteHardware(props.item.id)\">\n            <v-icon>delete</v-icon>\n          </v-btn>\n\n        </td>\n      </template>\n    </v-data-table>\n\n    <v-btn\n      :to=\"{path: 'hardware/new'}\"\n      fab\n      bottom\n      right\n      color=\"pink\"\n      dark\n      fixed\n    >\n      <v-icon>add</v-icon>\n    </v-btn>\n\n    <v-dialog v-if=\"selectedHardware\" v-model=\"deleteHardwareDialog\" max-width=\"290\" persistent>\n      <v-card>\n        <v-card-title class=\"headline\">Delete Hardware</v-card-title>\n        <v-card-text>Are you sure you want to delete this hardware? <strong>{{ selectedHardware.asset_tag }}</strong></v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"light-blue darken-1\" flat @click=\"cancelDeleteHardware()\">Cancel</v-btn>\n          <v-btn color=\"red darken-1\" flat @click=\"deleteHardware()\">Delete</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n  </div>\n\n</template>\n\n<script>\nimport { mapGetters, mapActions, mapMutations } from 'vuex'\nexport default {\n  data() {\n    return {\n      deleteHardwareDialog: false,\n      pagination: {\n        rowsPerPage: 5,\n        page: 1,\n      },\n      headers: [\n        // {\n        //   visible: false,\n        //   // text: 'id',\n        //   value: 'id',\n        //   sortable: false,\n        // },\n        {\n          text: 'Asset',\n          value: 'asset_tag',\n          align: 'left',\n        },\n        {\n          text: 'Category',\n          align: 'right',\n          value: 'category',\n        },\n        {\n          text: 'Model',\n          align: 'right',\n          value: 'model',\n        },\n        {\n          text: 'Status',\n          align: 'right',\n          value: 'status_label',\n        },\n        {\n          text: 'Location',\n          align: 'right',\n          value: 'location',\n        },\n      ],\n    }\n  },\n  computed: {\n    ...mapGetters({\n      hardwares: 'hardware/hardwares',\n      totalNumberOfHardwares: 'hardware/totalNumberOfHardwares',\n      loading: 'hardware/loading',\n      selectedHardware: 'hardware/selectedHardware',\n      user: 'common/user',\n    }),\n  },\n  watch: {\n    pagination: {\n      handler(after, before) {\n        this.updatePagination(after)\n        let navigation = after.page - before.page\n        if (after.rowsPerPage !== before.rowsPerPage) navigation = 0\n        switch (navigation) {\n          case 0:\n            this.find()\n            break\n          case 1:\n            this.findNext()\n            break\n          case -1:\n            this.findPrevious()\n            break\n        }\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    ...mapActions({\n      find: 'hardware/find',\n      findNext: 'hardware/findNext',\n      findPrevious: 'hardware/findPrevious',\n      selectHardware: 'hardware/selectHardware',\n      delete: 'hardware/delete',\n      update: 'hardware/update',\n      showMessage: 'common/showMessage',\n    }),\n    ...mapMutations({\n      updatePagination: 'hardware/UPDATE_PAGINATION_DATA',\n    }),\n    confirmDeleteHardware(hardwareId) {\n      this.selectHardware(hardwareId)\n      this.deleteHardwareDialog = true\n    },\n    checkHardware(hardware, type) {\n      switch (type) {\n        case 0: {\n          /* eslint-disable-next-line */\n          hardware.assigned_to = {\n            uid: this.user.uid,\n            name: this.user.displayName,\n          }\n          /* eslint-disable-next-line */\n          hardware.status_label = {\n            id: 2,\n            name: 'Out',\n            status_meta: 'checkedOut',\n          }\n          break\n        }\n        case 1: {\n          /* eslint-disable-next-line */\n          hardware.assigned_to = {\n            id: '',\n            name: '',\n          }\n          /* eslint-disable-next-line */\n          hardware.status_label = {\n            id: 1,\n            name: 'Ready to Deploy',\n            status_meta: 'deployable',\n          }\n          break\n        }\n        default: {\n          //statements;\n          break\n        }\n      }\n      this.update(hardware).then(() => {\n        this.showMessage({\n          text: 'Hardware has been checkedout',\n          icon: 'info_outline',\n          color: 'green',\n        })\n      })\n      this.pagination.page = 1\n      this.find()\n      // this.deleteHardwareDialog = false\n      // this.delete(this.selectedHardware).then(() => {\n      //   this.showMessage({\n      //     text: 'Hardware has been deleted',\n      //     icon: 'info_outline',\n      //     color: 'green',\n      //   })\n      //   this.pagination.page = 1\n      //   this.find()\n      // })\n    },\n    deleteHardware() {\n      this.deleteHardwareDialog = false\n      this.delete(this.selectedHardware).then(() => {\n        this.showMessage({\n          text: 'Hardware has been deleted',\n          icon: 'info_outline',\n          color: 'green',\n        })\n        this.pagination.page = 1\n        this.find()\n      })\n    },\n    cancelDeleteHardware() {\n      this.deleteHardwareDialog = false\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/modules/equipment/hardware"}]}